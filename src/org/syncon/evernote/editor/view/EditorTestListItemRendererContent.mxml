<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"  
		  creationComplete="group1_creationCompleteHandler(event)"
		 xmlns:view="org.syncon.evernote.editor.view.*" xmlns:tlf="net.asciiworks.tlf.*">
	
	
	<fx:Script> 
		<![CDATA[ 
			import mx.events.FlexEvent;
			
			import org.syncon.evernote.basic.model.CustomEvent;
			import org.syncon.evernote.editor.utils.EditorUtils;
			import org.syncon.evernote.editor.vo.EditorTestCaseVO;
			import org.syncon.utils.EntodoHolders;
			
			public var case_ : EditorTestCaseVO = new EditorTestCaseVO();
			private var enTodos : EntodoHolders = new EntodoHolders()
			public function set data(value:EditorTestCaseVO):void { 
				// Check to see if the data property is null. 
				if (value== null) 
					return; 
				// If the data property is not null,
				case_ = value as EditorTestCaseVO
				// set the Label controls appropriately. 
				//txtLbl.text = case_.name.toString(); 
				this.currentState = 'import'
				if ( this.case_.exporting ) 
					this.currentState = 'export'
						
				this.txtEvernoteXML.text = this.case_.evernoteXML; 
				this.tlfEditor.textFlow = this.case_.tlf; 
				this.txtImportedEvernoteXML.htmlText = this.case_.evernoteXML; 
				this.txtImportedEvernoteXML.text = this.case_.tlf_toString;
				this.txtExportEvernoteTxt.text = this.case_.exportedBackToEvernoteXML;
				this.enTodos.loadUp( this.case_.chk, this.case_.tlf, this.checkBoxHolder ) 
					var dbg : Array = [(this.case_.evernoteXML.toLowerCase() == this.case_.exportedBackToEvernoteXML.toLowerCase())]
				var diff : Array = ['', '']; 
				var missed : Boolean = false; 
					for ( var i : int = 0; i < this.case_.evernoteXML.length; i++ )
				{
					dbg = [ this.case_.evernoteXML.charAt(i) , this.case_.exportedBackToEvernoteXML.charAt(i) ]
					if ( missed ||  this.case_.evernoteXML.charAt(i) != this.case_.exportedBackToEvernoteXML.charAt(i) ) 
					{
						missed = true
						trace( 'missed')
						diff[0] += this.case_.evernoteXML.charAt(i)   
						diff[1] +=  this.case_.exportedBackToEvernoteXML.charAt(i)  
					}
				}
					if ( missed ) 
				txtMissed.text = 'Problem:' + diff.join('| not |')
					else
						this.txtMissed.text = ''; 
				this.txtSame.text = 'Same: '+
					(this.case_.evernoteXML.toLowerCase() == this.case_.exportedBackToEvernoteXML.toLowerCase()).toString()
			} 
			
			protected function onPreview(event:MouseEvent):void
			{
				this.dispatchEvent( new CustomEvent( 
					EditorTestList.EXPORT_NOTE, this.case_ ) )
			}
			
			

			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				var ee : EditorUtils; 
				this.tlfEditor.textFlowMarkup = EditorUtils.linkBreakTLF()
			}

		]]> 
	</fx:Script> 
	<!--
	<s:transitions>
	<s:Transition toState="*" >
	<s:AnimateColor targets="{[this.txtLbl]}"  
	duration="250" />
	</s:Transition>
	</s:transitions>
	-->
	<s:layout>
		<s:HorizontalLayout gap="3" verticalAlign="middle"/>
	</s:layout>
	<s:states> 
		<s:State name="import"/> 
		<s:State name="export"/> 
	</s:states> 
	
	<mx:Image id="thumb" />
	<mx:TextArea id="txtEvernoteXML" width="250"  height="250"/>
	<mx:TextArea id="txtImportedEvernoteXML" width="250"  height="250" />
	<s:Group>
		<tlf:TLFTextEditor id="tlfEditor" width="250"   automaticallyExpand="false" height="250" />
		<s:Group id="checkBoxHolder" />
	</s:Group>
	
	<mx:TextArea id="txtExportEvernoteTxt" width="250"  height="250" />
	
	<s:VGroup>
		<s:TextArea id="txtMissed" width="110" height="100" />
		<s:Label text="Same" id="txtSame" />
		<s:Button label="Preview"  click="onPreview(event)"/>		
	</s:VGroup>

	
	
</s:Group>
