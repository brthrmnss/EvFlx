<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
					  xmlns:s="library://ns.adobe.com/flex/spark"  width="100%"
					  creationComplete="skinnablecontainer1_creationCompleteHandler(event)"
					  xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:view="org.syncon.evernote.basic.view.*"  >
	
	<fx:Metadata>
		[Event(name="newTag", type=" org.syncon.evernote.basic.model.CustomEvent")]		
		[Event(name="tagsSelected", type=" org.syncon.evernote.basic.model.CustomEvent")]				
		[Event(name="renameTag", type=" org.syncon.evernote.basic.model.CustomEvent")]		
		[Event(name="deleteTag", type=" org.syncon.evernote.basic.model.CustomEvent")]		
		[Event(name="removeTagFromAllNotes", type=" org.syncon.evernote.basic.model.CustomEvent")]				
	</fx:Metadata>	
	<fx:Script>
		<![CDATA[
			import com.evernote.edam.type.Notebook;
			
			import mx.collections.ArrayCollection;
			import mx.events.DragEvent;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			
			import org.syncon.evernote.basic.model.CustomEvent;
			import org.syncon.evernote.basic.vo.MenuAutomationVO;
			import org.syncon.evernote.basic.vo.MenuVO;
			
			static public var NEW_TAG : String = 'newTag' ;
			static public var TAGS_SELECTED : String = 'tagsSelected';
			static public var RENAME_TAG : String = 'renameTag' ;
			static public var DELETE_TAG : String = 'deleteTag';			
			static public var REMOVE_TAG_FROM_ALL_NOTES : String = 'removeTagFromAllNotes'; 
			private var _tags : ArrayCollection = new ArrayCollection()
 			public function set tags ( n : ArrayCollection )  : void
			{
				this._tags.source = n.source; 
				/* 
				var allNotebooksNotebok : Notebook = new Notebook
				this._notebooks.addItem( allNotebooksNotebok ) 
				allNotebooksNotebok.name = 'All Notebooks'
				allNotebooksNotebok; //notebook count
				 */
				if ( this.list == null ) return;
				this.list.dataProvider = this._tags
				
				this.list.height = 22 * n.length;
			} 
			
			public var options : MenuAutomationVO; 
			
			protected function skinnablecontainer1_creationCompleteHandler(event:FlexEvent):void
			{
				this.createSubMenu()
			}
			public function createSubMenu() : void
			{
				
				this.tags = this._tags;
				
				this.options= new MenuAutomationVO()
				options.setupFlat( 
					['New Tag...', 'Rename', 'Delete', 'Remove From All Notes...'],
					['New Tag...', 'Rename', 'Delete', 'Remove From All Notes...'],
					null, 
					[NEW_TAG, RENAME_TAG,DELETE_TAG, REMOVE_TAG_FROM_ALL_NOTES ] ,
					[true, false, false, false, false]
					 )
				options.fx = fxGo
				this.subMenu.menuDp = options; //( ['New Tag...', 'Rename', 'Delete', 'Remove From All Notes...'], [this.fxGo] )
			}
			
			public function fxGo(n:String) : void
			{
				var selectedItem : Object = this.list.selectedItem
				this.dispatchEvent( new CustomEvent( n, selectedItem, false ) ) 
				return;
			}


			protected function list_changeHandler(event:ListEvent):void
			{
				for ( var i : int = 0 ; i < this.options.menuItems.length; i++ )
				{
					var menu : MenuVO = this.options.menuItems[i]
					
					menu.enabled = true
					if ( this.list.selectedItems.length == 0 )
						if ( i !=  0 ) 
							menu.enabled = false; 
					
				}
				//if more than 1 selected, only enable new tags
				if ( this.list.selectedItems.length > 1 ) 
				{
					//disable other stuff ...
					this.options.disableAll();
					this.options.enableIndexes([0])		
				}
				else if ( this.list.selectedItems.length == 1 ) 
				{
					//if only 1 tag and has no notes, 
					//remove remove from tag
					//this.options.disableIndexes([3])	
				}
				this.subMenu.menuDp = this.options
				this.dispatchEvent( new CustomEvent(TAGS_SELECTED, this.list.selectedItems ) ) 
			}


			protected function list_dragStartHandler(event:DragEvent):void
			{
				//event.preventDefault()
			}

		]]>
	</fx:Script>
	
	
	<s:layout>
		<s:VerticalLayout />
	</s:layout>
 
	<mx:Tree id="list"  itemRenderer="org.syncon.evernote.basic.view.tagTreeRenderer"
			 borderVisible="false" contentBackgroundAlpha="0" labelField="name"  
			  selectionColor="0x607980" change="list_changeHandler(event)" 
			  allowMultipleSelection="true" dropEnabled="true"
			  rollOverColor="0x598E52" 
			  dragEnabled="true"   dragMoveEnabled="true"			  
			 width="{this.width}" />
	
	<s:Rect />
	
	<s:Rect  width="100%"   height="1" >
		<s:fill>
			<s:SolidColor  color="#FFFFFF" />
		</s:fill>
	</s:Rect>	
	
	<view:util_left_side_extra_options id="subMenu" label="Edit" />	
</s:SkinnableContainer>
