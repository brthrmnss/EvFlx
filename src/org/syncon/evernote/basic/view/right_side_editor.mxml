<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
					  xmlns:s="library://ns.adobe.com/flex/spark" 
					  creationComplete="skinnablecontainer1_creationCompleteHandler(event)" 
					  xmlns:mx="library://ns.adobe.com/flex/mx" 
					  width="100%" 
					  height="100%" xmlns:basic="org.syncon.evernote.view.basic.*" xmlns:view="org.syncon.evernote.basic.view.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.evernote.edam.type.Note;
			
			import mx.events.FlexEvent;
			
			import org.syncon.evernote.basic.model.CustomEvent;
			import org.syncon.evernote.model.Note2;
			private var _note :  Note2 = new Note2()
			public function set note ( n : Note2) : void
			{
				this._note = n; 
				if ( this.editor != null ) 
					this.editor.note = _note
			}			
			
			protected function skinnablecontainer1_creationCompleteHandler(event:FlexEvent):void
			{
				this.menuButtons.createOptions(  ['Save and Close'] ,
				null, this.doAction, 
					null, ['Save and Close']  )
					this.menuOrderOrder.createOptions(  ['Pic', 'List'], null, this.doAction )
				this.editor.note = _note; 
			}
			
			public function doAction(str:String, data:Object, save:Boolean=true,  goBackToListState:Boolean=true):void
			{
				if ( str ==  'Save and Close' )
				{
					var note :   Object = {}; //new  Note()
					note.tempTitle = this.editor.txtTitle.text
					note.tempContent = this.editor.txtContents.textFlow
					note.save = save; 
					note.goBackToListState = goBackToListState; 
					this.dispatchEvent( new CustomEvent( 'clicked'+str, note ) ) 
					return; 
				}
				this.dispatchEvent( new CustomEvent( 'clicked'+str, data ) ) 
				//this.dispatchEvent( new CustomEvent( 'clicked'+str, data ) ) 
			}

			public function saveTemp(save:Boolean=false, goBackToListState:Boolean=true)  : void
			{
				this.doAction('Save and Close' , null , save, goBackToListState) ;
				//this._note.tempContent = this.editor.txtContents.textFlow
				//this._note.tempTitle = this.editor.txtTitle.text
			}
			
			public function getTemp()  : Object
			{
				var args : Object = {}
				this._note.tempTitle = this.editor.txtTitle.text
				args.tf = this.editor.txtContents.textFlow
				this._note.tags = this.editor.listTags.tags;
				this._note.notebookGuid = this.editor.dropdownNotebook.selectedItem.guid; 
				args.note = this._note; 
				return args
			}
			 
		]]>
	</fx:Script>
	
 <!--
	<s:Rect id="bgStart"  
			left="0" right="0" top="0" bottom="0" 
			>
		<s:fill>
			<s:SolidColor color="#E80000"  />
		</s:fill>
	</s:Rect>		
 -->
	<view:control_menu  textDecoration="none" x="5" y="5" id="menuButtons" />
	
	<s:HGroup right="5" y="5" verticalAlign="middle"  >
		
		<view:bandwidth_usage right="150" />
		<view:control_menu right="0" id="menuOrderOrder" />		
	</s:HGroup>

	<view:list_editor id="editor" y="45" width="{this.width-10}"
					  height="{this.height-50-10}"  x="5" />
</s:SkinnableContainer>
