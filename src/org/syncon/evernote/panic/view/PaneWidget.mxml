<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"  
		 creationComplete="onInit()" resize="group1_resizeHandler(event)"
		 implements="org.syncon.evernote.panic.view.IUIWidget"
		 color="0xFFFFFF" xmlns:view="org.syncon.evernote.panic.view.*"
		 >
	
	<fx:Metadata>
		[Event(name="tagsChanged", type="org.syncon.evernote.basic.model.CustomEvent")]
	</fx:Metadata>		
	
	<fx:Script>
		<![CDATA[
			import mx.events.ResizeEvent;
			
			import org.syncon.evernote.basic.model.CustomEvent;
			import org.syncon.evernote.panic.controller.WidgetEvent;
			import org.syncon.evernote.panic.vo.WidgetVO;
			
			static public var TAGS_CHANGED : String = 'tagsChanged'				
			
			
			/**
			 * Flag indiates whether tags should be removed instantly 
			 * */
			public var creationComplete : Boolean = false; 
			
			public var _widgetData : WidgetVO = new WidgetVO
			public function set  widgetData ( w : WidgetVO )  : void { this._widgetData = w }
			public function get   widgetData (  )  : WidgetVO { return this._widgetData; }		
			
			protected function onInit():void
			{
				this.creationComplete = true
				//this.addEventListener(ResizeEvent.RESIZE, this.onResize ) 
			}				
			
			public function onResize(e : Event) : void
			{
				//if ( this.data.vo.height == NaN ) 
				this.height = this.width*(115/99) 				
			}
			
			override public function set  width ( w : Number )  : void
			{
				super.width = w; 
				this.height = w*(115/99) 
			}
			
			override public function set  percentWidth ( w : Number )  : void
			{
				super.percentWidth =  w;
				//this.height = this.width*(115/99) 
			}			
			public function set colorScheme( i : int )  : void
			{
				if ( i == 0 ) 
				{
					this.color1.color = 0x4D4844
					this.color2.color = 0x0E0E0E
				}
				if ( i == 2 ) 
				{
					this.color1.color = 0x3D3F3C
					this.color2.color = 0x3D3F3C				
				}
			}
			
			
			
			public function importConfig(j :   WidgetVO )  : void
			{
				this.widgetData = j
				this.dispatchEvent( new WidgetEvent(WidgetVO.IMPORT_CONFIG,  j ) )
				this.height = j.height
				if ( j.data.hasOwnProperty( 'color1' ) )
					this.color1.color = j.data.color1; 
				if ( j.data.hasOwnProperty( 'color2' ) )
					this.color2.color = j.data.color2; 					
			}
			
			public function importData_( o:   Object )  : void
			{
			}		
			static public function importData( name : String, desc:String, 
											   source : String='',   refreshTime :  Number=15000, 
												color1 : String = '', color2 : String = '', 
											   height : Number = NaN)  :   MessageWidget
			{
				var o : Object = {}
				var vo : WidgetVO = new WidgetVO(WidgetVO.PANE, o); 	
				var g : MessageWidget = new MessageWidget()
				g.widgetData = vo
				
				vo.name = name; 
				vo.description = desc
				vo.source = source; 
				vo.refreshTime = refreshTime; 
				
				o.color1 = uint( color1 ) 
				o.color2 = uint( color2 ) 
				return g ; 				
			}						
				
			public function exportConfig( ) : WidgetVO    
			{
				return this._widgetData; 
			}			
			

			protected function group1_resizeHandler(event:ResizeEvent):void
			{
				if ( this.percentWidth != 0 && ! isNaN( this.percentWidth  ) ) 
				{
				//if ( this.data.vo.height == NaN ) 
				this.height = this.parentDocument.width*this.percentWidth/100*(115/99)
				}
			}
			
			public function showEdit() : void
			{
				this.editBorder.show()
			}
			
			public function hideEdit()  : void
			{
				this.editBorder.hide()
			}					

		]]>
	</fx:Script>
	
	<s:Rect  radiusX="12" radiusY="12"  top="0" right="0" bottom="0" left="0">
		<s:fill>
			<s:LinearGradient  rotation="86">
				<s:GradientEntry  id="color1" color="0x3E4B5C" ratio="0.2"/>
				<s:GradientEntry   id="color2" color="0x051931" ratio="1"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
<!--	
	<s:Rect  radiusX="12" radiusY="12"  top="2" right="2" bottom="2" left="2">
		<s:stroke>
			<s:SolidColorStroke color="{this.color2.color}" />
		</s:stroke>
	</s:Rect>
		
	-->
	<s:VGroup horizontalCenter="0" verticalCenter="0">
		<s:Label text="89/3" />
		<s:Label text="Transcode"  />
	</s:VGroup>
	
	<view:EditBorder id="editBorder" edit="{this}" />
</s:Group>
