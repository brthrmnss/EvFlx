<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx"  
				autoDrawBackground="false"
				 rollOver="itemrenderer1_rollOverHandler(event)"
				  rollOut="itemrenderer1_rollOutHandler(event)"
				 creationComplete="itemrenderer1_creationCompleteHandler(event)"
				minHeight="35" minWidth="35" xmlns:view="org.syncon.evernote.panic.view.*" 
				>
	
	<fx:Script> 
		<![CDATA[ 
			import mx.collections.ArrayList;
			import mx.events.FlexEvent;
			
			import org.syncon.evernote.basic.model.CustomEvent;
			import org.syncon.evernote.panic.controller.HoverPersonEvent;
			import org.syncon.evernote.panic.vo.PersonVO;
			import org.syncon.evernote.panic.vo.ProjectVO;
			[Bindable] public var menu :   PersonVO = new PersonVO()
			override public function set data(value:Object):void { 
				super.data = value; 
				if (value== null)  return; 
				menu = value as PersonVO
				this.img.source = menu.src; 
				//this.img.toolTip = menu.name;
				//this.img2.source = menu.src; 
				if ( this.parentDocument.parentDocument != null &&  
					this.parentDocument.parentDocument.hasOwnProperty('deleteMode' )  
					 )  
				{
					//this.owner.parent
					this.btnDelete.visible = this.parentDocument.parentDocument.deleteMode; 
				}				
			} 
 

			protected function itemrenderer1_creationCompleteHandler(event:FlexEvent):void
			{

			}


			protected function btnDelete_clickHandler(event:MouseEvent):void
			{
				this.dispatchEvent( new CustomEvent( 'deletePerson', this.menu ) ) 
			}


			protected function itemrenderer1_rollOverHandler(event:MouseEvent):void
			{
				this.parentApplication.context.dispatchEvent( new HoverPersonEvent(
					HoverPersonEvent.SHOW_PERSON_HOVER, this.menu, this ) ) 
			}


			protected function itemrenderer1_rollOutHandler(event:MouseEvent):void
			{
				this.parentApplication.context.dispatchEvent( new HoverPersonEvent(
					HoverPersonEvent.HIDE_PERSON_HOVER, this.menu, this ) ) 
			}

		]]> 
	</fx:Script> 	
	
	<s:states> 
		<s:State name="normal"/> 
		<s:State name="hovered"/> 
		<s:State name="disabled"/> 
	</s:states> 	
<!--	
	<s:transitions>
		<s:Transition toState="*" >
			<s:AnimateColor targets="{[this.txtLbl]}"   duration="250" />
		</s:Transition>
	</s:transitions>	
	 -->
	<s:transitions>
		<s:Transition toState="*" >
			<mx:AnimateProperty targets="{[this.img]}" property="alpha"    duration="250" />
		</s:Transition>
	</s:transitions>		
	 <mx:Image id="img" 
			    useHandCursor="true" buttonMode="true"
			   maxHeight="35" maxWidth="35"  alpha.hovered=".6" />
	<!--
	<view:ResampledImage id="img2"    useHandCursor="true" buttonMode="true"
						 
						 maxHeight="35" maxWidth="35"  alpha.hovered=".6" />-->
	
	<s:Button  visible="false" height="10" width="10" id="btnDelete" click="btnDelete_clickHandler(event)" />
</s:ItemRenderer>
