<?xml version="1.0" encoding="utf-8"?>
<popup:PopupBase xmlns:fx="http://ns.adobe.com/mxml/2009" 
					  xmlns:s="library://ns.adobe.com/flex/spark" 
					  xmlns:mx="library://ns.adobe.com/flex/mx"
					  xmlns:comps="org.syncon.comps.*" 
					  creationComplete="onInit()" 
					  implements="org.syncon.popups.view.IPopup"
					  xmlns:popup="org.syncon.evernote.basic.view.popup.*" xmlns:editors="org.syncon.evernote.panic.view.popup.editors.*" xmlns:utils="org.syncon.evernote.panic.view.utils.*" xmlns:view="org.syncon.evernote.panic.view.*"					  
					  >
	<fx:Declarations>
		<s:Fade duration="500" alphaFrom="0"  alphaTo="0.8"  id="fxFade"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayList;
			import mx.core.UIComponent;
			
			import org.syncon.evernote.basic.model.CustomEvent;
			import org.syncon.evernote.panic.controller.WidgetEvent;
			import org.syncon.evernote.panic.view.utils.LoadFile;
			import org.syncon.evernote.panic.view.utils.PanicLayouts;
			import org.syncon.evernote.panic.view.utils.PanicLayoutsPieces;
			import org.syncon.evernote.panic.vo.GalleryWidgetVO;
			import org.syncon.evernote.panic.vo.PersonVO;
			import org.syncon.evernote.panic.vo.ProjectVO;
			import org.syncon.popups.view.IPopup;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			
			import sss.Shelpers.Shelpers.ui.PopupCode;
			
			public var completeFx : Function; 
			public var selectedWidget :  GalleryWidgetVO = new GalleryWidgetVO(); 
			
			static public var SELECT_WIDGET : String = 'selectWidget' 
			
			override public function onInit() : void 
			{
				this.creationComplete = true; 
				this.popupCode.center()
				
				var ee :  PanicLayoutsPieces
				var options : Array = [
					new GalleryWidgetVO('Header', 
						'A header with giant text, fill it with the organization\'s name',
						'appicons/header.png', 
						PanicLayoutsPieces.largeHeader() ),
					new GalleryWidgetVO('Graphs', 
						'A collection of 5 bar graphs',
						'appicons/5xgraphs.png', 
						PanicLayoutsPieces.barGraph5Row )		,		
					new GalleryWidgetVO('3 x 3 Pane',  
						'A collection of 3 colums of 3 panes',
						'appicons/3x3pane.png', 
						PanicLayoutsPieces.pane3x3() ),		
					new GalleryWidgetVO('3 Random Color Pane', 
						'A collection of 3 colums of 3 panes with random gradients',
						'appicons/3 pane.png', 
						PanicLayoutsPieces.random3ColorPane  )	,	
					new GalleryWidgetVO('Too much twitter', 
						'A collection of 10 twitter windows', 
						'appicons/2muchtwitter.png', 
						PanicLayoutsPieces.tooMuchTwitter() ), 					
				] 	
				this.list1.dataProvider = new ArrayList(options)					
				
			}
			
			override public  function create(app:Object)  : IPopup
			{
				var popup:  WidgetGalleryPopup = new WidgetGalleryPopup()
				popup.popupCode = PopupCode.Create( popup, app ) 
				return popup			
			} 
			
			override public function show(  )  : void
			{
				this.popupCode.open( false,true ) 
			}
 
			public function open(  completeFx : Function)  : void
			{
				this.popupCode.open( false, true ) 
				this.txtAdding.visible = false; 	
				this.bgSquare.visible = false; 
				this.completeFx = completeFx
				this.selectedWidget = null; 
				//this.popupCode.moveToComponent( goToUi, 'tr', false , false, true, 0, -300 ) 
			 	this.txtSelectedWidget.text = ''; 
				this.btnSelect.enabled = false; 
				
				this.list1.selectedIndex = -1; 
			}
			
			 /**
			 * Export move data from ui to data object
			 * */
			
			override public function hide( ) : void
			{
				this.popupCode.close() 
			}

			protected function btnClose_clickHandler(event:MouseEvent):void
			{
				this.hide()
			}
 

			protected function btnSelect_clickHandler(event:MouseEvent):void
			{
				this.dispatchEvent( new CustomEvent( WidgetGalleryPopup.SELECT_WIDGET, this.selectedWidget ) ) 
			} 

			protected function list1_changeHandler(event:IndexChangeEvent):void
			{
				this.selectedWidget = this.list1.dataProvider.getItemAt( event.newIndex ) as GalleryWidgetVO
				this.txtSelectedWidget.text = this.selectedWidget.name; 
				this.btnSelect.enabled = true; 
				//select a button above ...
			}

		]]>
	</fx:Script>

	<editors:PopupBg />
	
 <s:VGroup   width="100%" paddingTop="10" paddingBottom="10" paddingRight="10" paddingLeft="10" >
 
	 <popup:PopupHeader  bold="false"   label="Widget Galery"  id="header" padding="0"  width="100%"/>
 
	 <s:Label text="Pre-defined Widgets and sets" />
	 <mx:Spacer height="15" />
	 <s:List id="list1" itemRenderer="org.syncon.evernote.panic.view.popup.utils.widget_gallery_renderer" 
			 width="100%" height="300"
			  change="list1_changeHandler(event)"
			 contentBackgroundAlpha="0"  borderVisible="false">
		<!-- <s:layout>
			 <s:HorizontalLayout  paddingLeft="10" paddingBottom="5" gap="10"/>
		 </s:layout>-->
	 </s:List>
	 <s:Line width="100%" >
		 <s:stroke>
			 <s:SolidColorStroke color="0x666666" />
		 </s:stroke>
	 </s:Line>
	 <s:HGroup verticalAlign="middle" width="100%" horizontalAlign="right">
		<!-- <utils:Avatar id="pic" />-->
		 <s:Label  id="txtSelectedWidget" />
		 <s:Button label="Add"  id="btnSelect" click="btnSelect_clickHandler(event)" />
	 </s:HGroup>

 </s:VGroup>
	<utils:CloseBtn  label="X" click="btnClose_clickHandler(event)" right="0" top="0" />
	<utils:IconButton  label="X"  iconSkin=".closeBtn" click="btnClose_clickHandler(event)" 
					   right="5" top="10" />
	
	<s:Group id="bgSquare"  alpha="0.6" height="100%" width="100%">
		<s:Rect top="0" left="0" bottom="0" right="0" >
			<s:fill>
				<s:SolidColor color="0xFFFFFF" />
			</s:fill>
		</s:Rect>
	</s:Group>
	<s:Label text="Adding..."   fontWeight="bold" fontSize="24" id="txtAdding" verticalCenter="0" horizontalCenter="0" />
	

</popup:PopupBase>
