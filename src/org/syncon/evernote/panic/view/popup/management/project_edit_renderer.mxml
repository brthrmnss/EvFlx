<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx"  
		  fontSize="12"   width="100%"  creationComplete="itemrenderer1_creationCompleteHandler(event)"
				autoDrawBackground="false" xmlns:view="org.syncon.evernote.panic.view.*" xmlns:utils="org.syncon.evernote.panic.view.utils.*">
	
	<fx:Script> 
		<![CDATA[ 
			import mx.collections.ArrayList;
			import mx.events.FlexEvent;
			
			import org.syncon.evernote.basic.model.CustomEvent;
			import org.syncon.evernote.panic.vo.ProjectVO;
			[Bindable] public var project :  ProjectVO = new ProjectVO()
			override public function set data(value:Object):void { 
				super.data = value; 
				if (value== null)  return; 

				if ( project != null ) 
					this.project.removeEventListener(ProjectVO.PROJECT_UPDATED, this.modifyRenderer )
				this.project = value as ProjectVO
				this.project.addEventListener(ProjectVO.PROJECT_UPDATED, this.modifyRenderer, false, 0, true ) 		
				
				this.modifyRenderer() 
			}
			
			private function modifyRenderer(e:CustomEvent=null) : void
			{
				if ( this.creationComplete == false  ) 
					return; 
				this.pic.source = this.project.img; 
				txtLbl.text = this.project.name.toString().toUpperCase(); 
				this.txtDesc.text = this.project.desc.toString().toUpperCase()
			} 
			
			public var creationComplete : Boolean = false; 
			protected function itemrenderer1_creationCompleteHandler(event:FlexEvent):void
			{
				this.creationComplete = true; 
				this.modifyRenderer()
			}

			protected function btnEdit_clickHandler(event:MouseEvent):void
			{
				this.dispatchEvent( new CustomEvent(ProjectManagementPopup.EDIT_PROJECT, 
					this.project  ) ) 
			}

		]]> 
	</fx:Script> 	
	
	<s:states> 
		<s:State name="normal"/> 
		<s:State name="hovered"/> 
		<s:State name="disabled"/> 
	</s:states> 	
	
	<s:transitions>
		<s:Transition toState="*" >
			<s:AnimateColor targets="{[this.txtLbl, this.txtDesc]}"   duration="250" />
		</s:Transition>
	</s:transitions>	
	
	<s:layout>
		<s:HorizontalLayout gap="10" horizontalAlign="left" />
	</s:layout>
	
	<utils:Avatar id="pic"  emptySetting=""/>
	
	<s:Label   id="txtLbl" verticalCenter="0" width="125"
			   color.hovered="0x696969"  x="5"
			   useHandCursor="true"  buttonMode="true"
			   />		
	
	<s:Label   id="txtDesc" verticalCenter="0" width="150"
			   color.hovered="0x696969"  x="5"
			   useHandCursor="true"  buttonMode="true"
			   />		
	<utils:IconButton label="edit"  id="btnEdit" click="btnEdit_clickHandler(event)"
					  toolTip="Edit"
					  iconSkin=".iconSettings"    />
	<!--	<s:Button label="Edit" click="btnEdit_clickHandler(event)" />-->
	
</s:ItemRenderer>
