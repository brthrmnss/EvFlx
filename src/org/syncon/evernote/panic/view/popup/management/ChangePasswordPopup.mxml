<?xml version="1.0" encoding="utf-8"?>
<popup:PopupBase xmlns:fx="http://ns.adobe.com/mxml/2009" 
					  xmlns:s="library://ns.adobe.com/flex/spark" 
					  xmlns:mx="library://ns.adobe.com/flex/mx"
					  xmlns:comps="org.syncon.comps.*" 
					  creationComplete="onInit()" 
					  implements="org.syncon.popups.view.IPopup"
					  xmlns:popup="org.syncon.evernote.basic.view.popup.*" xmlns:editors="org.syncon.evernote.panic.view.popup.editors.*" xmlns:utils="org.syncon.evernote.panic.view.utils.*" xmlns:view="org.syncon.evernote.panic.view.*"					  
					  >

	<popup:states>
		<s:State name="normal" />
		<s:State name="pre" />
		<s:State name="addBlankOption" />		
	</popup:states>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayList;
			
			import org.syncon.evernote.basic.model.CustomEvent;
			import org.syncon.evernote.panic.controller.WidgetEvent;
			import org.syncon.evernote.panic.vo.PersonVO;
			import org.syncon.evernote.panic.vo.ProjectVO;
			import org.syncon.popups.view.IPopup;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			
			import sss.Shelpers.Shelpers.ui.PopupCode;
			
			static public var CHANGE : String = 'changePassword'
			static public var OPENED_POPUP : String = 'openedPopup'
				
			public var fxValidate : Function; 
			public var fxComplete : Function; 
			public var passwordCanBeEmpty : Boolean = false; 
			
			override public function onInit() : void 
			{
				this.creationComplete = true; 
				this.popupCode.center()
			}
			
			override public  function create(app:Object)  : IPopup
			{
				var popup:   ChangePasswordPopup = new ChangePasswordPopup()
				popup.popupCode = PopupCode.Create( popup, app ) 
				return popup			
			} 
			
			override public function show(  )  : void
			{
				this.popupCode.open( false,true ) 
				this.dispatchEvent( new CustomEvent( OPENED_POPUP  ) ); 
			}
 
 		public function open( title : String, instructions : String,  preChangeField : String,
							  fxValidate : Function, fxComplete : Function, passwordCanBeEmpty_ : Boolean = false )  : void
			{
				this.popupCode.open( false, true ) 
 				this.header.label = title; 
				this.txtInstructions.text = instructions
				this.fxComplete = fxComplete
				this.fxValidate = fxValidate; 
				this.txtAlert.text = '' ;
				this.passwordCanBeEmpty = passwordCanBeEmpty_
				if ( preChangeField != '' &&  preChangeField != null )
				{
					this.currentState = 'pre'
					//this.formItem.label = preChangeField
				}
				else
					this.currentState = 'normal'
						
				if ( this.passwordCanBeEmpty ) 
				{
					this.txtInstructions.text += ' Password can be empty' 
				}
				//this.chkBlankPassword.selected = false; 
				///this.chkBlankPassword(null)
				this.dispatchEvent( new CustomEvent( OPENED_POPUP  ) ); 
			}  
			
			 /**
			 * Export move data from ui to data object
			 * */
			
			override public function hide( ) : void
			{
				this.popupCode.close() 
			}

			protected function btnClose_clickHandler(event:MouseEvent):void
			{
				this.hide()
			}
 
			protected function btnChange_clickHandler(event:MouseEvent):void
			{
				this.dispatchEvent( new CustomEvent(ChangePasswordPopup.CHANGE ) );  
			}
			
			protected function chkBlankPassword_changeHandler(event:Event):void
			{
				if ( this.chkBlankPassword.selected ) 
				{
					this.txtPassword.text = this.txtPassword2.text = '' ; 
				}
				this.txtPassword.enabled = this.txtPassword2.enabled = this.chkBlankPassword.selected
			}			

		]]>
	</fx:Script>

	<editors:PopupBg />
	
 <s:VGroup paddingTop="10" paddingBottom="20" paddingRight="10" paddingLeft="10" >
	 

	 <popup:PopupHeader  bold="false"   label="Change Password"  id="header" padding="0"  width="100%"/>
	 
	 <s:Label  id="txtInstructions" maxDisplayedLines="3" width="230" />
	 <s:Label  id="txtAlert" maxDisplayedLines="3" width="230" />
	 <mx:Form>
		 <mx:FormItem  includeIn="pre" label="Current" toolTip="What is the current password?"  id="formItemCurrentPassword">
			 <s:TextInput id="txtCurrentPassword"  displayAsPassword="true"   width="200"  toolTip="What is the current password?"/>
		 </mx:FormItem>			
		  
		 <s:Group width="100%"    includeIn="pre" >
			 <s:Line width="100%" >
				 <s:stroke>
					 <s:SolidColorStroke color="0x666666" />
				 </s:stroke>
			 </s:Line>
		 </s:Group>
		 <mx:FormItem includeIn="addBlankOption">
			 <s:CheckBox id="chkBlankPassword"  change="chkBlankPassword_changeHandler(event)" />
		 </mx:FormItem>
		 <mx:FormItem label="Password" >
			 <s:TextInput id="txtPassword" displayAsPassword="true"   width="200"/>
		 </mx:FormItem>	
		 <mx:FormItem label="Confirm" >
			 <s:TextInput id="txtPassword2" displayAsPassword="true"   width="200"/>
		 </mx:FormItem>	
		 <mx:FormItem label="" >
			 <s:Button  label="Change"  id="btnChange" click="btnChange_clickHandler(event)" />
		 </mx:FormItem>	
 
	 </mx:Form>	 
	 
	 
 </s:VGroup>  

		<utils:IconButton  label="X"  iconSkin=".closeBtn" click="btnClose_clickHandler(event)" 
						   right="5" top="10" />
</popup:PopupBase>
