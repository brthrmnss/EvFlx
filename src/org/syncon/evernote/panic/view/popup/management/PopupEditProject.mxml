<?xml version="1.0" encoding="utf-8"?>
<popup:PopupBase xmlns:fx="http://ns.adobe.com/mxml/2009" 
					  xmlns:s="library://ns.adobe.com/flex/spark" 
					  xmlns:mx="library://ns.adobe.com/flex/mx"
					  xmlns:comps="org.syncon.comps.*" 
					  creationComplete="onInit()" 
					  implements="org.syncon.popups.view.IPopup"
					  xmlns:popup="org.syncon.evernote.basic.view.popup.*" xmlns:editors="org.syncon.evernote.panic.view.popup.editors.*" xmlns:utils="org.syncon.evernote.panic.view.utils.*" xmlns:view="org.syncon.evernote.panic.view.*"					  
					  >

	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayList;
			
			import org.syncon.evernote.basic.model.CustomEvent;
			import org.syncon.evernote.panic.controller.WidgetEvent;
			import org.syncon.evernote.panic.view.GraphWidget;
			import org.syncon.evernote.panic.vo.ProjectVO;
			import org.syncon.evernote.panic.vo.WidgetVO;
			import org.syncon.popups.view.IPopup;
			
			import spark.events.IndexChangeEvent;
			
			import sss.Shelpers.Shelpers.ui.PopupCode;
			
			static public var EDIT_PROJECT : String = 'editProject'; 
			static public var ADD_PROJECT  : String = 'addProject'; 
			static public var OPENED_POPUP : String = 'openedPopup'; 
			
			public var completeFx : Function; 
			public var project : ProjectVO = new ProjectVO(); 
			
			override public function onInit() : void 
			{
				this.creationComplete = true; 
				this.popupCode.center()
			}
			
			override public  function create(app:Object)  : IPopup
			{
				var popup : PopupEditProject = new PopupEditProject ()
				popup.popupCode = PopupCode.Create( popup, app ) 
				return popup			
			} 
			
			override public function show(  )  : void
			{
				this.popupCode.open( false,true ) 
			}
 
			public function open( proj : ProjectVO, completeFx : Function = null )  : void
			{
				this.popupCode.open( false, true ) 
				this.project = proj
				if ( proj == null )
				{
					this.project = new ProjectVO()
					this.header.label = 'New Project'
				}
				else
					this.header.label = 'Edit Project'
						
				this.completeFx = completeFx
					
				this.txtName.text = this.project.name; 
				this.txtDesc.text = this.project.desc
				this.txtCol3.text = this.project.col2
				this.txtCol4.text = this.project.col3
				this.txtImage.text = this.project.img; 
				this.memberLIst.list1.dataProvider = new ArrayList( this.project.ppl ) 
			}
			
			 /**
			 * Export move data from ui to data object
			 * */
			
			override public function hide( ) : void
			{
				this.popupCode.close() 
			}

			protected function btnClose_clickHandler(event:MouseEvent):void
			{
				this.hide()
			}
 

			protected function btnSave_clickHandler(event:MouseEvent):void
			{
				this.project.name = this.txtName.text 
				this.project.desc = this.txtDesc.text
				this.project.col2 = this.txtCol3.text  
				this.project.col3 = this.txtCol4.text  
				this.project.img = this.txtImage.text  
				this.project.ppl  = this.memberLIst.list1.dataProvider.toArray();
				
				 if ( this.completeFx != null ) this.completeFx( this.project )
					 
				this.project.update()
					this.hide()
			}


			protected function btnCancel_clickHandler(event:MouseEvent):void
			{
				this.hide()
			}


			protected function btnEditMembers_clickHandler(event:MouseEvent):void
			{
				this.dispatchEvent( new CustomEvent( 'editMembers' ) ) 
				// TODO Auto-generated method stub
			}

		]]>
	</fx:Script>

	<!--	
	<s:Rect width="100%" height="100%" radiusX="8" radiusY="8">
		<s:fill>
			<s:SolidColor color="0xEDF6F7" />
		</s:fill>	
	</s:Rect>	 	
	
	-->
	
	<s:Rect width="100%" height="100%"  >
		<s:fill>
			<s:SolidColor color="0xFFFFFF" />
		</s:fill>	
	</s:Rect>		
	
 <s:VGroup gap="0"  paddingTop="10" paddingBottom="10" paddingRight="10" paddingLeft="10" >
	 <popup:PopupHeader  bold="false"   label="Edit Project"  id="header" padding="0"  width="100%"/>
	 
	 <mx:Form>
		 <mx:FormItem label="Name" >
			 <s:TextInput id="txtName" />
		 </mx:FormItem>
		 <mx:FormItem label="Description" >
			 <s:TextInput id="txtDesc" />
		 </mx:FormItem>
		 <mx:FormItem label="Column 2:" >
			 <s:TextInput id="txtCol4" />
		 </mx:FormItem>	
		 <mx:FormItem label="Column 3:" >
			 <s:TextInput id="txtCol3" />
		 </mx:FormItem>		
		 <mx:FormItem label="Image:" >
			 <s:TextInput id="txtImage" />
		 </mx:FormItem>		
		 <mx:FormItem label="Image:" >
			 <s:HGroup>
				 <view:ProjectMembersList id="memberLIst"  width="250" />
				 <s:Button label="Change" id="btnEditMembers" click="btnEditMembers_clickHandler(event)" />
			 </s:HGroup>
		 </mx:FormItem>				 
		 <mx:FormItem>
			 <s:HGroup>
				 <s:Button id="btnSave"  label="Save" click="btnSave_clickHandler(event)" />
				 <s:Button id="btnCancel" label="Cancel" click="btnCancel_clickHandler(event)" />
			 </s:HGroup>
		 </mx:FormItem>
	 </mx:Form>

 </s:VGroup>

		<utils:CloseBtn  label="X" click="btnClose_clickHandler(event)" right="0" top="0" />
		<utils:IconButton  label="X"  iconSkin=".closeBtn" click="btnClose_clickHandler(event)" 
						   right="5" top="5" />
</popup:PopupBase>
