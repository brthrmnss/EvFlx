<?xml version="1.0" encoding="utf-8"?>
<popup:PopupBase xmlns:fx="http://ns.adobe.com/mxml/2009" 
					  xmlns:s="library://ns.adobe.com/flex/spark" 
					  xmlns:mx="library://ns.adobe.com/flex/mx"
					  xmlns:comps="org.syncon.comps.*" 
					  creationComplete="onInit()" 
					  implements="org.syncon.popups.view.IPopup"
					  xmlns:popup="org.syncon.evernote.basic.view.popup.*"
					  xmlns:editors="org.syncon.evernote.panic.view.popup.editors.*" 
					  xmlns:utils="org.syncon.evernote.panic.view.utils.*"					  
					  >

	<fx:Script>
		<![CDATA[
			import org.syncon.evernote.basic.model.CustomEvent;
			import org.syncon.evernote.panic.controller.WidgetEvent;
			import org.syncon.evernote.panic.view.GraphWidget;
			import org.syncon.evernote.panic.vo.WidgetVO;
			import org.syncon.popups.view.IPopup;
			
			import spark.events.IndexChangeEvent;
			
			import sss.Shelpers.Shelpers.ui.PopupCode;
			
			static public var SAVE_BOARD : String = 'saveBoard'; 
			static public var CHECK_NAME  : String = 'checkName'; 
			static public var OPENED_POPUP : String = 'openedPopup'; 
			static public var CLOSED_POPUP : String = 'closedPopup'; 
			
			static public var CHANGE_BOARD_PASSWORD : String = 'changeBoardPassword'; 
			static public var CHANGE_ADMIN_PASSWORD : String = 'changeAdminPassword'; 
			
			override public function onInit() : void 
			{
				this.creationComplete = true; 
				this.popupCode.center()
			}
			
			override public  function create(app:Object)  : IPopup
			{
				var popup : BoardManagementPopup = new BoardManagementPopup ()
				popup.popupCode = PopupCode.Create( popup, app ) 
				return popup			
			} 
			
			override public function show(  )  : void
			{
				this.popupCode.open(false,true  ) 
				this.dispatchEvent( new CustomEvent( OPENED_POPUP  ) )
			}
 
			override public function hide( ) : void
			{
				this.dispatchEvent( new CustomEvent( CLOSED_POPUP  ) )
				this.popupCode.close() 
			}

			protected function btnSave_clickHandler(event:MouseEvent):void
			{
				this.dispatchEvent( new CustomEvent( SAVE_BOARD  ) )
			}
			
			protected function btnCancel_clickHandler(event:MouseEvent):void
			{
				this.hide()
			} 
			protected function btnClose_clickHandler(event:MouseEvent):void
			{
				this.hide()
			} 			


			protected function txtName_focusOutHandler(event:FocusEvent):void
			{
				this.dispatchEvent( new CustomEvent( CHECK_NAME  ) )
			}


			protected function chkBoardPassword_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
			}


			protected function btnChangePassword_clickHandler(event:MouseEvent):void
			{
				this.dispatchEvent( new CustomEvent( CHANGE_BOARD_PASSWORD  ) )
			}


			protected function btnChangeAdminPassword_clickHandler(event:MouseEvent):void
			{
				this.dispatchEvent( new CustomEvent( CHANGE_ADMIN_PASSWORD  ) )
			}

		]]>
	</fx:Script>
 
	<editors:PopupBg />
	<!--<s:Rect width="100%" height="100%"  >
		<s:fill>
			<s:SolidColor color="0xFFFFFF" />
		</s:fill>	
	</s:Rect>		
	-->
 <s:VGroup    paddingTop="10" paddingBottom="10" paddingRight="10" paddingLeft="10" >
	 <popup:PopupHeader  bold="false"   label="Edit Board"  padding="0"  width="100%"/>
	 <mx:Form>
		 <s:Label id="txtAlert" />
		 <mx:FormItem label="Name" >
			 <s:TextInput id="txtName" selectable="false" editable="false"
						  focusOut="txtName_focusOutHandler(event)"   width="200"/>
		<!--	 <s:Label id="txtNameOk" />
			 <s:Label id="txtUrl" />-->
		 </mx:FormItem>
		 <mx:FormItem label="Description" >
			 <s:TextArea id="txtDesc"  width="200"/>
		 </mx:FormItem>
		 
		 <mx:FormItem label="Gap" >
			 <s:NumericStepper id="numHorizontalGap" maximum="40"  toolTip="The whitespace between components in a row"  width="200"/>
		 </mx:FormItem>		 
		 
		 <mx:FormItem label="Row Gap" >
			 <s:NumericStepper id="numVerticalGap" maximum="40" toolTip="The whitespace between rows"  width="200"/>
		 </mx:FormItem>				 
	<!--	 
		 <mx:FormItem  label="Change Password">
			 <s:CheckBox id="chkBoardPassword" click="chkBoardPassword_clickHandler(event)" />
		 </mx:FormItem>
		 <mx:FormItem label="Board Password" >
			 <s:TextInput id="txtPassword" displayAsPassword="true"   width="200"/>
			 <s:Label text="Can be blank" />
		 </mx:FormItem>	
		 <mx:FormItem label="Confirm Board Password" >
			 <s:TextInput id="txtPassword2" displayAsPassword="true"   width="200"/>
		 </mx:FormItem>
		 <mx:FormItem label="Admin Password" >
			 <s:TextInput id="txtAdminPassword" displayAsPassword="true" />
		 </mx:FormItem>			 
		 
		 <mx:FormItem label="Confirm Admin Pass" >
			 <s:TextInput id="txtAdminPassword2" displayAsPassword="true" />
		 </mx:FormItem>			 
		 		 -->
		 		<mx:FormItem label="" >
					<s:Button id="btnChangePassword"
							   toolTip="Change the password users will be required to enter when they login"
							  label="Change Board Password" click="btnChangePassword_clickHandler(event)" />
				</mx:FormItem>
		 <mx:FormItem label="" >
			 <s:Button id="btnChangeAdminPassword" 
					   toolTip="Change the user password"
					   label="Change Admin Password" click="btnChangeAdminPassword_clickHandler(event)" />
		 </mx:FormItem>		 
		 <mx:FormItem>
			 <s:HGroup>
				 <s:Button id="btnSave"  label="Save" click="btnSave_clickHandler(event)" />
				 <s:Button id="btnCancel" label="Cancel" click="btnCancel_clickHandler(event)" />
			 </s:HGroup>
		 </mx:FormItem>
	 </mx:Form>

 </s:VGroup>

		<utils:CloseBtn  label="X" click="btnClose_clickHandler(event)" right="0" top="0" />
		<utils:IconButton  label="X"  iconSkin=".closeBtn" click="btnClose_clickHandler(event)" right="10" top="10" />
</popup:PopupBase>
