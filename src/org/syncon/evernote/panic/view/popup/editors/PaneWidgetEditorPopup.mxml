<?xml version="1.0" encoding="utf-8"?>
<popup:PopupBase xmlns:fx="http://ns.adobe.com/mxml/2009" 
				 xmlns:s="library://ns.adobe.com/flex/spark" 
				 xmlns:mx="library://ns.adobe.com/flex/mx"
				 xmlns:comps="org.syncon.comps.*" 
				 creationComplete="onInit()" 
				 implements="org.syncon.popups.view.IPopup"
				 xmlns:popup="org.syncon.evernote.basic.view.popup.*" 
				 xmlns:editors="org.syncon.evernote.panic.view.popup.editors.*" 
				 xmlns:utils="org.syncon.evernote.panic.view.utils.*"					  
				 >
	
	<fx:Script>
		<![CDATA[
			import org.syncon.evernote.basic.model.CustomEvent;
			import org.syncon.evernote.panic.controller.WidgetEvent;
			import org.syncon.evernote.panic.view.PaneWidget;
			import org.syncon.evernote.panic.vo.WidgetVO;
			import org.syncon.popups.view.IPopup;
			
			import sss.Shelpers.Shelpers.ui.PopupCode;
			
			public var ui : PaneWidget; 
			
			override public function onInit() : void 
			{
				this.creationComplete = true; 
				this.popupCode.center()
			}
			
			
			override public  function create(app:Object)  : IPopup
			{
				var popup :  PaneWidgetEditorPopup = new PaneWidgetEditorPopup()
				popup.popupCode = PopupCode.Create( popup, app ) 
				return popup			
			} 
			
			override public function show(  )  : void
			{
				this.popupCode.open( false,true ) 
			}
			
			public function open( a :  WidgetVO  )  : void
			{
				this.popupCode.open( false, false ) 
				this.dispatchEvent( new WidgetEvent( WidgetEvent.EDIT_WIDGET, null,  a ) )
				this.ui = a.ui as PaneWidget; 
			}
 
			
			override public function hide( ) : void
			{
				this.popupCode.close() 
			}
			
			
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				this.hide()
			}
			
			
			protected function btnOk_clickHandler(event:MouseEvent):void
			{
				this.dispatchEvent( new CustomEvent( WidgetEvent.UPDATE_WIDGET_CONFIG ) ) 
			}
			
			protected function btnTest_clickHandler(event:MouseEvent):void
			{
				this.dispatchEvent( new CustomEvent(  WidgetEvent.TEST_WIDGET ) ) 
			}			
			
		]]>
	</fx:Script>
	
	<editors:PopupBg />
	
	
	<s:VGroup gap="0"  paddingTop="10" paddingBottom="10" paddingRight="10" paddingLeft="10" >
		<popup:PopupHeader  bold="false"   label="Edit Pane"  padding="0"  width="100%"/>
		
		<mx:Form>
			<mx:FormItem label="Text Source" >
				<s:TextInput id="txtMessage" width="200" 
							 toolTip="Text source for the top layer" />
			</mx:FormItem>
			<mx:FormItem label="Bg Source" >
				<s:TextInput id="txtMessageBg" width="200" 
							 toolTip="Text source for the bottom layer" />
			</mx:FormItem>			
			
			<mx:FormItem label="Color 1" >
				<mx:ColorPicker id="colorPicker1" />
			</mx:FormItem>	
			<mx:FormItem label="Color 2" >
				<mx:ColorPicker id="colorPicker2" />
			</mx:FormItem>
			<mx:FormItem label="Custom Gradient" >
				<s:TextInput id="txtCustomGradientBg" width="200" 
							 toolTip="Define more elaborate gradients, overrides the colors used agoave" />
			</mx:FormItem>		
			<mx:FormItem label="Corner Radius" >
				<s:NumericStepper id="txtCornerRadius" width="200"  minimum="0" maximum="100"
							 toolTip="How round to make corners?" />
			</mx:FormItem>					
			<editors:WidgetUpdateSettingsControlBox id="timer"  width="100%"/>
			<mx:FormItem>
				<s:HGroup>
					<s:Button label="Ok" id="btnOk" click="btnOk_clickHandler(event)" />
					<s:Button label="Test" id="btnTest" click="btnTest_clickHandler(event)" />
				</s:HGroup>
			</mx:FormItem>
		
			
		</mx:Form>
		
		
	</s:VGroup>
	<utils:CloseBtn  label="X" click="button1_clickHandler(event)" right="0" top="0" />
	
	<utils:IconButton  label="X"  iconSkin=".closeBtn" 
					   click="button1_clickHandler(event)" right="5" top="10" />
</popup:PopupBase>
