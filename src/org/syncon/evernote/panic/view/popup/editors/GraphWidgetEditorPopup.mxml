<?xml version="1.0" encoding="utf-8"?>
<popup:PopupBase xmlns:fx="http://ns.adobe.com/mxml/2009" 
					  xmlns:s="library://ns.adobe.com/flex/spark" 
					  xmlns:mx="library://ns.adobe.com/flex/mx"
					  xmlns:comps="org.syncon.comps.*" 
					  creationComplete="onInit()" 
					  implements="org.syncon.popups.view.IPopup"
					  xmlns:popup="org.syncon.evernote.basic.view.popup.*" xmlns:editors="org.syncon.evernote.panic.view.popup.editors.*" xmlns:utils="org.syncon.evernote.panic.view.utils.*"					  
					  >

	<fx:Script>
		<![CDATA[
			import org.syncon.evernote.basic.model.CustomEvent;
			import org.syncon.evernote.panic.controller.WidgetEvent;
			import org.syncon.evernote.panic.view.GraphWidget;
			import org.syncon.evernote.panic.vo.WidgetVO;
			import org.syncon.popups.view.IPopup;
			
			import sss.Shelpers.Shelpers.ui.PopupCode;
			
			static public var EDIT_WIDGET : String = 'editWidget'; 
			static public var UPDATE_WIDGET_CONFIG  : String = 'updateWdigetConfig'; 
			static public var TEST_WIDGET : String = 'testWidget'; 
			
			public var ui : GraphWidget; 
			
			override public function onInit() : void 
			{
				this.creationComplete = true; 
				this.popupCode.center()
			}
 
			
			override public  function create(app:Object)  : IPopup
			{
				var popup :  GraphWidgetEditorPopup = new  GraphWidgetEditorPopup ()
				popup.popupCode = PopupCode.Create( popup, app ) 
				return popup			
			} 
			
			override public function show(  )  : void
			{
				this.popupCode.open( false,true ) 
			}
 
			public function open( a :  WidgetVO  )  : void
			{
				this.popupCode.open( false, false ) 
				this.dispatchEvent( new CustomEvent( EDIT_WIDGET, a ) )
				this.ui = a.ui as GraphWidget; 
				this.loadValues(a)
			}
			
			/**
			 * Move values from data to the ui
			 * */
			public function loadValues(a :  WidgetVO ) : void
			{
				this.txtTop.text = a.data.labelTop; 
				this.txtBottom.text =  a.data.labelBottom; 
				this.timer.dataX = a ; 
				this.txtValue.text = a.source; 
				this.txtMaximum.text = a.data.max
				this.colorPicker.selectedColor = a.data.fillColor; 
					
			}		
			
			 /**
			 * Export move data from ui to data object
			 * */
			
			override public function hide( ) : void
			{
				this.popupCode.close() 
			}
 
 

			protected function button1_clickHandler(event:MouseEvent):void
			{
				this.hide()
			}


			protected function btnOk_clickHandler(event:MouseEvent):void
			{
				this.dispatchEvent( new CustomEvent( UPDATE_WIDGET_CONFIG ) ) 
			}
			
			protected function btnTest_clickHandler(event:MouseEvent):void
			{
				this.dispatchEvent( new CustomEvent(  TEST_WIDGET ) ) 
			}			

		]]>
	</fx:Script>

	<!--	
	<s:Rect width="100%" height="100%" radiusX="8" radiusY="8">
		<s:fill>
			<s:SolidColor color="0xEDF6F7" />
		</s:fill>	
	</s:Rect>	 	
	
	-->
	
	<s:Rect width="100%" height="100%"  >
		<s:fill>
			<s:SolidColor color="0xFFFFFF" />
		</s:fill>	
	</s:Rect>		
	
 <s:VGroup gap="0"  paddingTop="10" paddingBottom="10" paddingRight="10" paddingLeft="10" >
	 <popup:PopupHeader  bold="false"   label="Edit Graph"  padding="0"  width="100%"/>
	 
	 
	<mx:Form>
		<mx:FormItem label="Top Text Source" >
			<s:TextInput id="txtTop" />
		</mx:FormItem>
		<mx:FormItem label="Bottom Text Source" >
			<s:TextInput id="txtBottom" />
		</mx:FormItem>
		<mx:FormItem label="Value Source" >
			<s:TextInput id="txtValue" />
		</mx:FormItem>
		<mx:FormItem label="Maximum Value Text Source" >
			<s:TextInput id="txtMaximum" />
		</mx:FormItem>	
		
		<mx:FormItem label="Color" >
			<mx:ColorPicker id="colorPicker" />
		</mx:FormItem>			
		
		<mx:FormItem>
			<s:HGroup>
				<s:Button label="Ok" id="btnOk" click="btnOk_clickHandler(event)" />
				<s:Button label="Test" id="btnTest" click="btnTest_clickHandler(event)" />
			</s:HGroup>
		</mx:FormItem>
		<editors:WidgetUpdateSettingsControlBox id="timer" />

	</mx:Form>
		

 </s:VGroup>
<utils:CloseBtn  label="X" click="button1_clickHandler(event)" right="0" top="0" />
	<utils:IconButton  label="X"  iconSkin=".closeBtn" click="button1_clickHandler(event)" right="0" top="0" />
</popup:PopupBase>
